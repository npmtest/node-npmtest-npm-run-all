{"/home/travis/build/npmtest/node-npmtest-npm-run-all/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":2,"38":2,"39":1,"40":2,"41":2,"42":1,"43":2,"44":2,"45":1,"46":2,"47":2,"48":1,"49":1,"50":1,"51":1,"52":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":2,"12":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":12},"end":{"line":129,"column":40}},"skip":true},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":77},"end":{"line":140,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":148,"loc":{"start":{"line":148,"column":83},"end":{"line":151,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":79},"end":{"line":162,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":170,"loc":{"start":{"line":170,"column":75},"end":{"line":173,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":185,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":184,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":126,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":79},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":25},"skip":true},"35":{"start":{"line":125,"column":12},"end":{"line":125,"column":45},"skip":true},"36":{"start":{"line":128,"column":8},"end":{"line":135,"column":14},"skip":true},"37":{"start":{"line":133,"column":16},"end":{"line":133,"column":29},"skip":true},"38":{"start":{"line":134,"column":16},"end":{"line":134,"column":55},"skip":true},"39":{"start":{"line":137,"column":8},"end":{"line":146,"column":10},"skip":true},"40":{"start":{"line":144,"column":12},"end":{"line":144,"column":25},"skip":true},"41":{"start":{"line":145,"column":12},"end":{"line":145,"column":45},"skip":true},"42":{"start":{"line":148,"column":8},"end":{"line":157,"column":10},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":25},"skip":true},"44":{"start":{"line":156,"column":12},"end":{"line":156,"column":48},"skip":true},"45":{"start":{"line":159,"column":8},"end":{"line":168,"column":10},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":25},"skip":true},"47":{"start":{"line":167,"column":12},"end":{"line":167,"column":46},"skip":true},"48":{"start":{"line":170,"column":8},"end":{"line":179,"column":10},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":94},"skip":true},"50":{"start":{"line":178,"column":12},"end":{"line":178,"column":48},"skip":true},"51":{"start":{"line":182,"column":8},"end":{"line":182,"column":35},"skip":true},"52":{"start":{"line":183,"column":8},"end":{"line":183,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":183,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":126,"column":9},"skip":true}]},"12":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":48},"end":{"line":128,"column":85},"skip":true},{"start":{"line":129,"column":12},"end":{"line":135,"column":13},"skip":true}]},"13":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":42},"end":{"line":137,"column":73},"skip":true},{"start":{"line":137,"column":77},"end":{"line":146,"column":9},"skip":true}]},"14":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":45},"end":{"line":148,"column":79},"skip":true},{"start":{"line":148,"column":83},"end":{"line":157,"column":9},"skip":true}]},"15":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":43},"end":{"line":159,"column":75},"skip":true},{"start":{"line":159,"column":79},"end":{"line":168,"column":9},"skip":true}]},"16":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":71},"skip":true},{"start":{"line":170,"column":75},"end":{"line":179,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_npm_run_all */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"128":1,"133":2,"134":2,"137":1,"144":2,"145":2,"148":1,"155":2,"156":2,"159":1,"166":2,"167":2,"170":1,"177":1,"178":1,"182":1,"183":1}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/lib.npmtest_npm_run_all.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/lib.npmtest_npm_run_all.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":62}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_npm_run_all */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_npm_run_all = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_npm_run_all = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":55}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":69},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-npm-run-all && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_npm_run_all */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_npm_run_all","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_npm_run_all.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_npm_run_all.rollup.js'] =","            local.assetsDict['/assets.npmtest_npm_run_all.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_npm_run_all.__dirname +","                    '/lib.npmtest_npm_run_all.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0,0],"15":[0,0,0],"16":[0,0,0],"17":[0,0,0],"18":[0,0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"toArray","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":20}}},"2":{"name":"applyArguments","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":40}}},"3":{"name":"parsePatterns","line":94,"loc":{"start":{"line":94,"column":0},"end":{"line":94,"column":48}}},"4":{"name":"toOverwriteOptions","line":110,"loc":{"start":{"line":110,"column":0},"end":{"line":110,"column":36}}},"5":{"name":"toConfigOptions","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":33}}},"6":{"name":"maxLength","line":144,"loc":{"start":{"line":144,"column":0},"end":{"line":144,"column":33}}},"7":{"name":"npmRunAll","line":211,"loc":{"start":{"line":211,"column":17},"end":{"line":211,"column":64}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":54}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":39}},"5":{"start":{"line":22,"column":0},"end":{"line":22,"column":49}},"6":{"start":{"line":30,"column":0},"end":{"line":35,"column":1}},"7":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"8":{"start":{"line":32,"column":8},"end":{"line":32,"column":17}},"9":{"start":{"line":34,"column":4},"end":{"line":34,"column":37}},"10":{"start":{"line":44,"column":0},"end":{"line":83,"column":1}},"11":{"start":{"line":45,"column":4},"end":{"line":45,"column":40}},"12":{"start":{"line":47,"column":4},"end":{"line":82,"column":7}},"13":{"start":{"line":47,"column":35},"end":{"line":82,"column":6}},"14":{"start":{"line":48,"column":8},"end":{"line":50,"column":9}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":56}},"16":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"17":{"start":{"line":52,"column":12},"end":{"line":52,"column":41}},"18":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"19":{"start":{"line":55,"column":12},"end":{"line":55,"column":53}},"20":{"start":{"line":58,"column":8},"end":{"line":58,"column":41}},"21":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"22":{"start":{"line":60,"column":12},"end":{"line":60,"column":57}},"23":{"start":{"line":64,"column":8},"end":{"line":76,"column":9}},"24":{"start":{"line":65,"column":12},"end":{"line":65,"column":46}},"25":{"start":{"line":67,"column":12},"end":{"line":70,"column":13}},"26":{"start":{"line":68,"column":16},"end":{"line":68,"column":67}},"27":{"start":{"line":69,"column":16},"end":{"line":69,"column":35}},"28":{"start":{"line":71,"column":12},"end":{"line":73,"column":13}},"29":{"start":{"line":72,"column":16},"end":{"line":72,"column":59}},"30":{"start":{"line":75,"column":12},"end":{"line":75,"column":56}},"31":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"32":{"start":{"line":78,"column":12},"end":{"line":78,"column":31}},"33":{"start":{"line":81,"column":8},"end":{"line":81,"column":17}},"34":{"start":{"line":94,"column":0},"end":{"line":99,"column":1}},"35":{"start":{"line":95,"column":4},"end":{"line":95,"column":47}},"36":{"start":{"line":96,"column":4},"end":{"line":96,"column":79}},"37":{"start":{"line":96,"column":52},"end":{"line":96,"column":78}},"38":{"start":{"line":98,"column":4},"end":{"line":98,"column":69}},"39":{"start":{"line":110,"column":0},"end":{"line":124,"column":1}},"40":{"start":{"line":111,"column":4},"end":{"line":111,"column":22}},"41":{"start":{"line":113,"column":4},"end":{"line":121,"column":6}},"42":{"start":{"line":114,"column":8},"end":{"line":114,"column":49}},"43":{"start":{"line":116,"column":8},"end":{"line":120,"column":10}},"44":{"start":{"line":117,"column":12},"end":{"line":117,"column":53}},"45":{"start":{"line":119,"column":12},"end":{"line":119,"column":69}},"46":{"start":{"line":123,"column":4},"end":{"line":123,"column":18}},"47":{"start":{"line":133,"column":0},"end":{"line":135,"column":1}},"48":{"start":{"line":134,"column":4},"end":{"line":134,"column":68}},"49":{"start":{"line":134,"column":42},"end":{"line":134,"column":67}},"50":{"start":{"line":144,"column":0},"end":{"line":146,"column":1}},"51":{"start":{"line":145,"column":4},"end":{"line":145,"column":40}},"52":{"start":{"line":211,"column":0},"end":{"line":282,"column":1}},"53":{"start":{"line":212,"column":4},"end":{"line":212,"column":52}},"54":{"start":{"line":213,"column":4},"end":{"line":213,"column":54}},"55":{"start":{"line":214,"column":4},"end":{"line":214,"column":54}},"56":{"start":{"line":215,"column":4},"end":{"line":215,"column":58}},"57":{"start":{"line":216,"column":4},"end":{"line":216,"column":54}},"58":{"start":{"line":217,"column":4},"end":{"line":217,"column":68}},"59":{"start":{"line":218,"column":4},"end":{"line":218,"column":53}},"60":{"start":{"line":219,"column":4},"end":{"line":219,"column":57}},"61":{"start":{"line":220,"column":4},"end":{"line":220,"column":53}},"62":{"start":{"line":221,"column":4},"end":{"line":221,"column":71}},"63":{"start":{"line":222,"column":4},"end":{"line":222,"column":61}},"64":{"start":{"line":223,"column":4},"end":{"line":223,"column":59}},"65":{"start":{"line":224,"column":4},"end":{"line":224,"column":49}},"66":{"start":{"line":225,"column":4},"end":{"line":225,"column":78}},"67":{"start":{"line":226,"column":4},"end":{"line":226,"column":46}},"68":{"start":{"line":227,"column":4},"end":{"line":281,"column":5}},"69":{"start":{"line":228,"column":8},"end":{"line":228,"column":63}},"70":{"start":{"line":229,"column":8},"end":{"line":231,"column":9}},"71":{"start":{"line":230,"column":12},"end":{"line":230,"column":40}},"72":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"73":{"start":{"line":233,"column":12},"end":{"line":233,"column":55}},"74":{"start":{"line":235,"column":8},"end":{"line":237,"column":9}},"75":{"start":{"line":236,"column":12},"end":{"line":236,"column":58}},"76":{"start":{"line":238,"column":8},"end":{"line":240,"column":9}},"77":{"start":{"line":239,"column":12},"end":{"line":239,"column":51}},"78":{"start":{"line":242,"column":8},"end":{"line":246,"column":9}},"79":{"start":{"line":248,"column":8},"end":{"line":277,"column":14}},"80":{"start":{"line":250,"column":16},"end":{"line":252,"column":17}},"81":{"start":{"line":251,"column":20},"end":{"line":251,"column":56}},"82":{"start":{"line":253,"column":16},"end":{"line":253,"column":40}},"83":{"start":{"line":256,"column":16},"end":{"line":256,"column":62}},"84":{"start":{"line":257,"column":16},"end":{"line":257,"column":61}},"85":{"start":{"line":259,"column":16},"end":{"line":276,"column":18}},"86":{"start":{"line":280,"column":8},"end":{"line":280,"column":53}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":30},"end":{"line":34,"column":31}},{"start":{"line":34,"column":34},"end":{"line":34,"column":37}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":8}},{"start":{"line":54,"column":8},"end":{"line":54,"column":8}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":8}},{"start":{"line":59,"column":8},"end":{"line":59,"column":8}}]},"7":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":25}},{"start":{"line":59,"column":29},"end":{"line":59,"column":52}}]},"8":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"9":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":12}},{"start":{"line":67,"column":12},"end":{"line":67,"column":12}}]},"10":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":71,"column":12}},{"start":{"line":71,"column":12},"end":{"line":71,"column":12}}]},"11":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":8}},{"start":{"line":77,"column":8},"end":{"line":77,"column":8}}]},"12":{"line":98,"type":"cond-expr","locations":[{"start":{"line":98,"column":28},"end":{"line":98,"column":58}},{"start":{"line":98,"column":61},"end":{"line":98,"column":69}}]},"13":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":19},"end":{"line":212,"column":26}},{"start":{"line":212,"column":30},"end":{"line":212,"column":43}},{"start":{"line":212,"column":48},"end":{"line":212,"column":52}}]},"14":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":20},"end":{"line":213,"column":27}},{"start":{"line":213,"column":31},"end":{"line":213,"column":45}},{"start":{"line":213,"column":50},"end":{"line":213,"column":54}}]},"15":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":20},"end":{"line":214,"column":27}},{"start":{"line":214,"column":31},"end":{"line":214,"column":45}},{"start":{"line":214,"column":50},"end":{"line":214,"column":54}}]},"16":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":22},"end":{"line":215,"column":29}},{"start":{"line":215,"column":33},"end":{"line":215,"column":49}},{"start":{"line":215,"column":54},"end":{"line":215,"column":58}}]},"17":{"line":216,"type":"binary-expr","locations":[{"start":{"line":216,"column":20},"end":{"line":216,"column":27}},{"start":{"line":216,"column":31},"end":{"line":216,"column":45}},{"start":{"line":216,"column":50},"end":{"line":216,"column":54}}]},"18":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":27},"end":{"line":217,"column":34}},{"start":{"line":217,"column":38},"end":{"line":217,"column":59}},{"start":{"line":217,"column":64},"end":{"line":217,"column":68}}]},"19":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":18},"end":{"line":218,"column":25}},{"start":{"line":218,"column":29},"end":{"line":218,"column":46}},{"start":{"line":218,"column":51},"end":{"line":218,"column":53}}]},"20":{"line":219,"type":"binary-expr","locations":[{"start":{"line":219,"column":29},"end":{"line":219,"column":36}},{"start":{"line":219,"column":40},"end":{"line":219,"column":56}}]},"21":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":27},"end":{"line":220,"column":34}},{"start":{"line":220,"column":38},"end":{"line":220,"column":52}}]},"22":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":36},"end":{"line":221,"column":43}},{"start":{"line":221,"column":47},"end":{"line":221,"column":70}}]},"23":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":31},"end":{"line":222,"column":38}},{"start":{"line":222,"column":42},"end":{"line":222,"column":60}}]},"24":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":30},"end":{"line":223,"column":37}},{"start":{"line":223,"column":41},"end":{"line":223,"column":58}}]},"25":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":25},"end":{"line":224,"column":32}},{"start":{"line":224,"column":36},"end":{"line":224,"column":48}}]},"26":{"line":225,"type":"cond-expr","locations":[{"start":{"line":225,"column":36},"end":{"line":225,"column":73}},{"start":{"line":225,"column":77},"end":{"line":225,"column":78}}]},"27":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":37},"end":{"line":225,"column":44}},{"start":{"line":225,"column":48},"end":{"line":225,"column":67}},{"start":{"line":225,"column":72},"end":{"line":225,"column":73}}]},"28":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":20},"end":{"line":226,"column":27}},{"start":{"line":226,"column":31},"end":{"line":226,"column":46}}]},"29":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":8},"end":{"line":229,"column":8}},{"start":{"line":229,"column":8},"end":{"line":229,"column":8}}]},"30":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":8},"end":{"line":232,"column":8}},{"start":{"line":232,"column":8},"end":{"line":232,"column":8}}]},"31":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":12},"end":{"line":232,"column":28}},{"start":{"line":232,"column":32},"end":{"line":232,"column":65}}]},"32":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":8},"end":{"line":235,"column":8}},{"start":{"line":235,"column":8},"end":{"line":235,"column":8}}]},"33":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":12},"end":{"line":235,"column":43}},{"start":{"line":235,"column":47},"end":{"line":235,"column":66}}]},"34":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":8},"end":{"line":238,"column":8}},{"start":{"line":238,"column":8},"end":{"line":238,"column":8}}]},"35":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":12},"end":{"line":238,"column":21}},{"start":{"line":238,"column":25},"end":{"line":238,"column":29}}]},"36":{"line":243,"type":"cond-expr","locations":[{"start":{"line":243,"column":21},"end":{"line":243,"column":33}},{"start":{"line":243,"column":36},"end":{"line":243,"column":38}}]},"37":{"line":244,"type":"cond-expr","locations":[{"start":{"line":244,"column":28},"end":{"line":244,"column":61}},{"start":{"line":244,"column":64},"end":{"line":244,"column":66}}]},"38":{"line":245,"type":"cond-expr","locations":[{"start":{"line":245,"column":21},"end":{"line":245,"column":44}},{"start":{"line":245,"column":47},"end":{"line":245,"column":49}}]},"39":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":16},"end":{"line":250,"column":16}},{"start":{"line":250,"column":16},"end":{"line":250,"column":16}}]}},"code":["/**"," * @module index"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const shellQuote = require(\"shell-quote\")","const matchTasks = require(\"./match-tasks\")","const readPackageJson = require(\"./read-package-json\")","const runTasks = require(\"./run-tasks\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const ARGS_PATTERN = /\\{(!)?([*@]|\\d+)([^}]+)?}/g","","/**"," * Converts a given value to an array."," *"," * @param {string|string[]|null|undefined} x - A value to convert."," * @returns {string[]} An array."," */","function toArray(x) {","    if (x == null) {","        return []","    }","    return Array.isArray(x) ? x : [x]","}","","/**"," * Replaces argument placeholders (such as `{1}`) by arguments."," *"," * @param {string[]} patterns - Patterns to replace."," * @param {string[]} args - Arguments to replace."," * @returns {string[]} replaced"," */","function applyArguments(patterns, args) {","    const defaults = Object.create(null)","","    return patterns.map(pattern => pattern.replace(ARGS_PATTERN, (whole, indirectionMark, id, options) => {","        if (indirectionMark != null) {","            throw Error(`Invalid Placeholder: ${whole}`)","        }","        if (id === \"@\") {","            return shellQuote.quote(args)","        }","        if (id === \"*\") {","            return shellQuote.quote([args.join(\" \")])","        }","","        const position = parseInt(id, 10)","        if (position >= 1 && position <= args.length) {","            return shellQuote.quote([args[position - 1]])","        }","","        // Address default values","        if (options != null) {","            const prefix = options.slice(0, 2)","","            if (prefix === \":=\") {","                defaults[id] = shellQuote.quote([options.slice(2)])","                return defaults[id]","            }","            if (prefix === \":-\") {","                return shellQuote.quote([options.slice(2)])","            }","","            throw Error(`Invalid Placeholder: ${whole}`)","        }","        if (defaults[id] != null) {","            return defaults[id]","        }","","        return \"\"","    }))","}","","/**"," * Parse patterns."," * In parsing process, it replaces argument placeholders (such as `{1}`) by arguments."," *"," * @param {string|string[]} patternOrPatterns - Patterns to run."," *      A pattern is a npm-script name or a Glob-like pattern."," * @param {string[]} args - Arguments to replace placeholders."," * @returns {string[]} Parsed patterns."," */","function parsePatterns(patternOrPatterns, args) {","    const patterns = toArray(patternOrPatterns)","    const hasPlaceholder = patterns.some(pattern => ARGS_PATTERN.test(pattern))","","    return hasPlaceholder ? applyArguments(patterns, args) : patterns","}","","/**"," * Converts a given config object to an `--:=` style option array."," *"," * @param {object|null} config -"," *   A map-like object to overwrite package configs."," *   Keys are package names."," *   Every value is a map-like object (Pairs of variable name and value)."," * @returns {string[]} `--:=` style options."," */","function toOverwriteOptions(config) {","    const options = []","","    Object.keys(config).forEach(packageName => {","        const packageConfig = config[packageName]","","        Object.keys(packageConfig).forEach(variableName => {","            const value = packageConfig[variableName]","","            options.push(`--${packageName}:${variableName}=${value}`)","        })","    })","","    return options","}","","/**"," * Converts a given config object to an `--a=b` style option array."," *"," * @param {object|null} config -"," *   A map-like object to set configs."," * @returns {string[]} `--a=b` style options."," */","function toConfigOptions(config) {","    return Object.keys(config).map(key => `--${key}=${config[key]}`)","}","","/**"," * Gets the maximum length."," *"," * @param {number} length - The current maximum length."," * @param {string} name - A name."," * @returns {number} The maximum length."," */","function maxLength(length, name) {","    return Math.max(name.length, length)","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Runs npm-scripts which are matched with given patterns."," *"," * @param {string|string[]} patternOrPatterns - Patterns to run."," *   A pattern is a npm-script name or a Glob-like pattern."," * @param {object|undefined} [options] Optional."," * @param {boolean} options.parallel -"," *   If this is `true`, run scripts in parallel."," *   Otherwise, run scripts in sequencial."," *   Default is `false`."," * @param {stream.Readable|null} options.stdin -"," *   A readable stream to send messages to stdin of child process."," *   If this is `null`, ignores it."," *   If this is `process.stdin`, inherits it."," *   Otherwise, makes a pipe."," *   Default is `null`."," * @param {stream.Writable|null} options.stdout -"," *   A writable stream to receive messages from stdout of child process."," *   If this is `null`, cannot send."," *   If this is `process.stdout`, inherits it."," *   Otherwise, makes a pipe."," *   Default is `null`."," * @param {stream.Writable|null} options.stderr -"," *   A writable stream to receive messages from stderr of child process."," *   If this is `null`, cannot send."," *   If this is `process.stderr`, inherits it."," *   Otherwise, makes a pipe."," *   Default is `null`."," * @param {string[]} options.taskList -"," *   Actual name list of npm-scripts."," *   This function search npm-script names in this list."," *   If this is `null`, this function reads `package.json` of current directly."," * @param {object|null} options.packageConfig -"," *   A map-like object to overwrite package configs."," *   Keys are package names."," *   Every value is a map-like object (Pairs of variable name and value)."," *   e.g. `{\"npm-run-all\": {\"test\": 777}}`"," *   Default is `null`."," * @param {boolean} options.silent -"," *   The flag to set `silent` to the log level of npm."," *   Default is `false`."," * @param {boolean} options.continueOnError -"," *   The flag to ignore errors."," *   Default is `false`."," * @param {boolean} options.printLabel -"," *   The flag to print task names at the head of each line."," *   Default is `false`."," * @param {boolean} options.printName -"," *   The flag to print task names before running each task."," *   Default is `false`."," * @param {number} options.maxParallel -"," *   The maximum number of parallelism."," *   Default is unlimited."," * @param {string} options.npmPath -"," *   The path to npm."," *   Default is `process.env.npm_execpath`."," * @returns {Promise}"," *   A promise object which becomes fullfilled when all npm-scripts are completed."," */","module.exports = function npmRunAll(patternOrPatterns, options) {","    const stdin = (options && options.stdin) || null","    const stdout = (options && options.stdout) || null","    const stderr = (options && options.stderr) || null","    const taskList = (options && options.taskList) || null","    const config = (options && options.config) || null","    const packageConfig = (options && options.packageConfig) || null","    const args = (options && options.arguments) || []","    const parallel = Boolean(options && options.parallel)","    const silent = Boolean(options && options.silent)","    const continueOnError = Boolean(options && options.continueOnError)","    const printLabel = Boolean(options && options.printLabel)","    const printName = Boolean(options && options.printName)","    const race = Boolean(options && options.race)","    const maxParallel = parallel ? ((options && options.maxParallel) || 0) : 1","    const npmPath = options && options.npmPath","    try {","        const patterns = parsePatterns(patternOrPatterns, args)","        if (patterns.length === 0) {","            return Promise.resolve(null)","        }","        if (taskList != null && Array.isArray(taskList) === false) {","            throw new Error(\"Invalid options.taskList\")","        }","        if (typeof maxParallel !== \"number\" || !(maxParallel >= 0)) {","            throw new Error(\"Invalid options.maxParallel\")","        }","        if (!parallel && race) {","            throw new Error(\"Invalid options.race\")","        }","","        const prefixOptions = [].concat(","            silent ? [\"--silent\"] : [],","            packageConfig ? toOverwriteOptions(packageConfig) : [],","            config ? toConfigOptions(config) : []","        )","","        return Promise.resolve()","            .then(() => {","                if (taskList != null) {","                    return {taskList, packageInfo: null}","                }","                return readPackageJson()","            })","            .then(x => {","                const tasks = matchTasks(x.taskList, patterns)","                const labelWidth = tasks.reduce(maxLength, 0)","","                return runTasks(tasks, {","                    stdin,","                    stdout,","                    stderr,","                    prefixOptions,","                    continueOnError,","                    labelState: {","                        enabled: printLabel,","                        width: labelWidth,","                        lastPrefix: null,","                        lastIsLinebreak: true,","                    },","                    printName,","                    packageInfo: x.packageInfo,","                    race,","                    maxParallel,","                    npmPath,","                })","            })","    }","    catch (err) {","        return Promise.reject(new Error(err.message))","    }","}",""],"l":{"13":1,"14":1,"15":1,"16":1,"22":1,"30":1,"31":0,"32":0,"34":0,"44":1,"45":0,"47":0,"48":0,"49":0,"51":0,"52":0,"54":0,"55":0,"58":0,"59":0,"60":0,"64":0,"65":0,"67":0,"68":0,"69":0,"71":0,"72":0,"75":0,"77":0,"78":0,"81":0,"94":1,"95":0,"96":0,"98":0,"110":1,"111":0,"113":0,"114":0,"116":0,"117":0,"119":0,"123":0,"133":1,"134":0,"144":1,"145":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"232":0,"233":0,"235":0,"236":0,"238":0,"239":0,"242":0,"248":0,"250":0,"251":0,"253":0,"256":0,"257":0,"259":0,"280":0}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/match-tasks.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/match-tasks.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"swapColonAndSlash","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":30}}},"2":{"name":"createFilter","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":31}}},"3":{"name":"(anonymous_3)","line":59,"loc":{"start":{"line":59,"column":15},"end":{"line":59,"column":18}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":7},"end":{"line":72,"column":25}}},"5":{"name":"matchTasks","line":93,"loc":{"start":{"line":93,"column":17},"end":{"line":93,"column":57}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":40}},"4":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"5":{"start":{"line":29,"column":4},"end":{"line":29,"column":71}},"6":{"start":{"line":29,"column":50},"end":{"line":29,"column":70}},"7":{"start":{"line":41,"column":0},"end":{"line":50,"column":1}},"8":{"start":{"line":42,"column":4},"end":{"line":42,"column":34}},"9":{"start":{"line":43,"column":4},"end":{"line":43,"column":41}},"10":{"start":{"line":44,"column":4},"end":{"line":44,"column":68}},"11":{"start":{"line":45,"column":4},"end":{"line":45,"column":60}},"12":{"start":{"line":46,"column":4},"end":{"line":46,"column":58}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":45}},"14":{"start":{"line":49,"column":4},"end":{"line":49,"column":30}},"15":{"start":{"line":60,"column":8},"end":{"line":60,"column":24}},"16":{"start":{"line":61,"column":8},"end":{"line":61,"column":44}},"17":{"start":{"line":73,"column":8},"end":{"line":73,"column":84}},"18":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"19":{"start":{"line":75,"column":12},"end":{"line":75,"column":37}},"20":{"start":{"line":77,"column":8},"end":{"line":77,"column":31}},"21":{"start":{"line":93,"column":0},"end":{"line":128,"column":1}},"22":{"start":{"line":94,"column":4},"end":{"line":94,"column":46}},"23":{"start":{"line":95,"column":4},"end":{"line":95,"column":54}},"24":{"start":{"line":96,"column":4},"end":{"line":96,"column":33}},"25":{"start":{"line":97,"column":4},"end":{"line":97,"column":42}},"26":{"start":{"line":100,"column":4},"end":{"line":121,"column":6}},"27":{"start":{"line":101,"column":8},"end":{"line":101,"column":25}},"28":{"start":{"line":103,"column":8},"end":{"line":111,"column":10}},"29":{"start":{"line":104,"column":12},"end":{"line":110,"column":13}},"30":{"start":{"line":105,"column":16},"end":{"line":105,"column":28}},"31":{"start":{"line":106,"column":16},"end":{"line":109,"column":17}},"32":{"start":{"line":114,"column":8},"end":{"line":117,"column":9}},"33":{"start":{"line":115,"column":12},"end":{"line":115,"column":63}},"34":{"start":{"line":116,"column":12},"end":{"line":116,"column":24}},"35":{"start":{"line":118,"column":8},"end":{"line":120,"column":9}},"36":{"start":{"line":119,"column":12},"end":{"line":119,"column":42}},"37":{"start":{"line":123,"column":4},"end":{"line":123,"column":48}},"38":{"start":{"line":124,"column":4},"end":{"line":126,"column":5}},"39":{"start":{"line":125,"column":8},"end":{"line":125,"column":73}},"40":{"start":{"line":127,"column":4},"end":{"line":127,"column":25}}},"branchMap":{"1":{"line":44,"type":"cond-expr","locations":[{"start":{"line":44,"column":32},"end":{"line":44,"column":39}},{"start":{"line":44,"column":42},"end":{"line":44,"column":68}}]},"2":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":32},"end":{"line":45,"column":34}},{"start":{"line":45,"column":37},"end":{"line":45,"column":60}}]},"3":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":27},"end":{"line":73,"column":50}},{"start":{"line":73,"column":55},"end":{"line":73,"column":83}}]},"4":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":8}},{"start":{"line":74,"column":8},"end":{"line":74,"column":8}}]},"5":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":35}},{"start":{"line":74,"column":39},"end":{"line":74,"column":72}}]},"6":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":12}},{"start":{"line":104,"column":12},"end":{"line":104,"column":12}}]},"7":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]},"8":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":18}},{"start":{"line":114,"column":23},"end":{"line":114,"column":48}},{"start":{"line":114,"column":52},"end":{"line":114,"column":73}}]},"9":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":8}},{"start":{"line":118,"column":8},"end":{"line":118,"column":8}}]},"10":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":4},"end":{"line":124,"column":4}},{"start":{"line":124,"column":4},"end":{"line":124,"column":4}}]}},"code":["/**"," * @module match-tasks"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const Minimatch = require(\"minimatch\").Minimatch","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const COLON_OR_SLASH = /[:/]/g","const CONVERT_MAP = {\":\": \"/\", \"/\": \":\"}","","/**"," * Swaps \":\" and \"/\", in order to use \":\" as the separator in minimatch."," *"," * @param {string} s - A text to swap."," * @returns {string} The text which was swapped."," */","function swapColonAndSlash(s) {","    return s.replace(COLON_OR_SLASH, (matched) => CONVERT_MAP[matched])","}","","/**"," * Creates a filter from user-specified pattern text."," *"," * The task name is the part until the first space."," * The rest part is the arguments for this task."," *"," * @param {string} pattern - A pattern to create filter."," * @returns {{match: function, task: string, args: string}} The filter object of the pattern."," */","function createFilter(pattern) {","    const trimmed = pattern.trim()","    const spacePos = trimmed.indexOf(\" \")","    const task = spacePos < 0 ? trimmed : trimmed.slice(0, spacePos)","    const args = spacePos < 0 ? \"\" : trimmed.slice(spacePos)","    const matcher = new Minimatch(swapColonAndSlash(task))","    const match = matcher.match.bind(matcher)","","    return {match, task, args}","}","","/**"," * The set to remove overlapped task."," */","class TaskSet {","    /**","     * Creates a instance.","     */","    constructor() {","        this.result = []","        this.sourceMap = Object.create(null)","    }","","    /**","     * Adds a command (a pattern) into this set if it's not overlapped.","     * \"Overlapped\" is meaning that the command was added from a different source.","     *","     * @param {string} command - A pattern text to add.","     * @param {string} source - A task name to check.","     * @returns {void}","     */","    add(command, source) {","        const sourceList = this.sourceMap[command] || (this.sourceMap[command] = [])","        if (sourceList.length === 0 || sourceList.indexOf(source) !== -1) {","            this.result.push(command)","        }","        sourceList.push(source)","    }","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Enumerates tasks which matches with given patterns."," *"," * @param {string[]} taskList - A list of actual task names."," * @param {string[]} patterns - Pattern texts to match."," * @returns {string[]} Tasks which matches with the patterns."," * @private"," */","module.exports = function matchTasks(taskList, patterns) {","    const filters = patterns.map(createFilter)","    const candidates = taskList.map(swapColonAndSlash)","    const taskSet = new TaskSet()","    const unknownSet = Object.create(null)","","    // Take tasks while keep the order of patterns.","    filters.forEach(filter => {","        let found = false","","        candidates.forEach(candidate => {","            if (filter.match(candidate)) {","                found = true","                taskSet.add(","                    swapColonAndSlash(candidate) + filter.args,","                    filter.task","                )","            }","        })","","        // Built-in tasks should be allowed.","        if (!found && (filter.task === \"restart\" || filter.task === \"env\")) {","            taskSet.add(filter.task + filter.args, filter.task)","            found = true","        }","        if (!found) {","            unknownSet[filter.task] = true","        }","    })","","    const unknownTasks = Object.keys(unknownSet)","    if (unknownTasks.length > 0) {","        throw new Error(`Task not found: \"${unknownTasks.join(\"\\\", \")}\"`)","    }","    return taskSet.result","}",""],"l":{"13":1,"19":1,"20":1,"28":1,"29":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"49":0,"60":0,"61":0,"73":0,"74":0,"75":0,"77":0,"93":1,"94":0,"95":0,"96":0,"97":0,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"114":0,"115":0,"116":0,"118":0,"119":0,"123":0,"124":0,"125":0,"127":0}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/read-package-json.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/read-package-json.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"readPackageJson","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":44}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"3":{"start":{"line":25,"column":0},"end":{"line":31,"column":1}},"4":{"start":{"line":26,"column":4},"end":{"line":26,"column":56}},"5":{"start":{"line":27,"column":4},"end":{"line":30,"column":7}},"6":{"start":{"line":27,"column":39},"end":{"line":30,"column":5}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":30},"end":{"line":28,"column":42}},{"start":{"line":28,"column":46},"end":{"line":28,"column":48}}]}},"code":["/**"," * @module read-package-json"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const joinPath = require(\"path\").join","const readPkg = require(\"read-pkg\")","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Reads the package.json in the current directory."," *"," * @returns {object} package.json's information."," */","module.exports = function readPackageJson() {","    const path = joinPath(process.cwd(), \"package.json\")","    return readPkg(path).then(body => ({","        taskList: Object.keys(body.scripts || {}),","        packageInfo: {path, body},","    }))","}",""],"l":{"13":1,"14":1,"25":1,"26":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/run-tasks.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/run-tasks.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"remove","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":26}}},"2":{"name":"runTasks","line":48,"loc":{"start":{"line":48,"column":17},"end":{"line":48,"column":51}}},"3":{"name":"done","line":65,"loc":{"start":{"line":65,"column":8},"end":{"line":65,"column":24}}},"4":{"name":"abort","line":78,"loc":{"start":{"line":78,"column":8},"end":{"line":78,"column":25}}},"5":{"name":"next","line":97,"loc":{"start":{"line":97,"column":8},"end":{"line":97,"column":24}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":53}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}},"3":{"start":{"line":27,"column":0},"end":{"line":32,"column":1}},"4":{"start":{"line":28,"column":4},"end":{"line":28,"column":34}},"5":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"6":{"start":{"line":30,"column":8},"end":{"line":30,"column":30}},"7":{"start":{"line":48,"column":0},"end":{"line":159,"column":1}},"8":{"start":{"line":49,"column":4},"end":{"line":158,"column":6}},"9":{"start":{"line":50,"column":8},"end":{"line":53,"column":9}},"10":{"start":{"line":51,"column":12},"end":{"line":51,"column":23}},"11":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"12":{"start":{"line":55,"column":8},"end":{"line":55,"column":74}},"13":{"start":{"line":55,"column":43},"end":{"line":55,"column":72}},"14":{"start":{"line":56,"column":8},"end":{"line":56,"column":71}},"15":{"start":{"line":56,"column":50},"end":{"line":56,"column":69}},"16":{"start":{"line":57,"column":8},"end":{"line":57,"column":27}},"17":{"start":{"line":58,"column":8},"end":{"line":58,"column":24}},"18":{"start":{"line":59,"column":8},"end":{"line":59,"column":27}},"19":{"start":{"line":65,"column":8},"end":{"line":72,"column":9}},"20":{"start":{"line":66,"column":12},"end":{"line":71,"column":13}},"21":{"start":{"line":67,"column":16},"end":{"line":67,"column":32}},"22":{"start":{"line":70,"column":16},"end":{"line":70,"column":29}},"23":{"start":{"line":78,"column":8},"end":{"line":91,"column":9}},"24":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"25":{"start":{"line":80,"column":16},"end":{"line":80,"column":22}},"26":{"start":{"line":82,"column":12},"end":{"line":82,"column":26}},"27":{"start":{"line":84,"column":12},"end":{"line":90,"column":13}},"28":{"start":{"line":85,"column":16},"end":{"line":85,"column":22}},"29":{"start":{"line":88,"column":16},"end":{"line":88,"column":48}},"30":{"start":{"line":88,"column":38},"end":{"line":88,"column":47}},"31":{"start":{"line":89,"column":16},"end":{"line":89,"column":56}},"32":{"start":{"line":97,"column":8},"end":{"line":149,"column":9}},"33":{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},"34":{"start":{"line":99,"column":16},"end":{"line":99,"column":22}},"35":{"start":{"line":101,"column":12},"end":{"line":106,"column":13}},"36":{"start":{"line":102,"column":16},"end":{"line":104,"column":17}},"37":{"start":{"line":103,"column":20},"end":{"line":103,"column":26}},"38":{"start":{"line":105,"column":16},"end":{"line":105,"column":22}},"39":{"start":{"line":107,"column":12},"end":{"line":107,"column":38}},"40":{"start":{"line":108,"column":12},"end":{"line":108,"column":55}},"41":{"start":{"line":110,"column":12},"end":{"line":110,"column":34}},"42":{"start":{"line":111,"column":12},"end":{"line":148,"column":13}},"43":{"start":{"line":113,"column":20},"end":{"line":113,"column":45}},"44":{"start":{"line":114,"column":20},"end":{"line":116,"column":21}},"45":{"start":{"line":115,"column":24},"end":{"line":115,"column":30}},"46":{"start":{"line":119,"column":20},"end":{"line":119,"column":58}},"47":{"start":{"line":122,"column":20},"end":{"line":128,"column":21}},"48":{"start":{"line":123,"column":24},"end":{"line":123,"column":67}},"49":{"start":{"line":124,"column":24},"end":{"line":127,"column":25}},"50":{"start":{"line":125,"column":28},"end":{"line":125,"column":35}},"51":{"start":{"line":126,"column":28},"end":{"line":126,"column":34}},"52":{"start":{"line":131,"column":20},"end":{"line":134,"column":21}},"53":{"start":{"line":132,"column":24},"end":{"line":132,"column":31}},"54":{"start":{"line":133,"column":24},"end":{"line":133,"column":30}},"55":{"start":{"line":137,"column":20},"end":{"line":137,"column":26}},"56":{"start":{"line":140,"column":20},"end":{"line":140,"column":45}},"57":{"start":{"line":141,"column":20},"end":{"line":145,"column":21}},"58":{"start":{"line":142,"column":24},"end":{"line":142,"column":41}},"59":{"start":{"line":143,"column":24},"end":{"line":143,"column":31}},"60":{"start":{"line":144,"column":24},"end":{"line":144,"column":30}},"61":{"start":{"line":146,"column":20},"end":{"line":146,"column":26}},"62":{"start":{"line":151,"column":8},"end":{"line":151,"column":39}},"63":{"start":{"line":152,"column":8},"end":{"line":154,"column":26}},"64":{"start":{"line":155,"column":8},"end":{"line":157,"column":9}},"65":{"start":{"line":156,"column":12},"end":{"line":156,"column":18}}},"branchMap":{"1":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":8}},{"start":{"line":50,"column":8},"end":{"line":50,"column":8}}]},"3":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":12},"end":{"line":66,"column":12}},{"start":{"line":66,"column":12},"end":{"line":66,"column":12}}]},"4":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":79,"column":12}},{"start":{"line":79,"column":12},"end":{"line":79,"column":12}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":12},"end":{"line":84,"column":12}},{"start":{"line":84,"column":12},"end":{"line":84,"column":12}}]},"6":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":12}},{"start":{"line":98,"column":12},"end":{"line":98,"column":12}}]},"7":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":101,"column":12}},{"start":{"line":101,"column":12},"end":{"line":101,"column":12}}]},"8":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":16},"end":{"line":102,"column":16}},{"start":{"line":102,"column":16},"end":{"line":102,"column":16}}]},"9":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":20},"end":{"line":114,"column":20}},{"start":{"line":114,"column":20},"end":{"line":114,"column":20}}]},"10":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":20},"end":{"line":122,"column":20}},{"start":{"line":122,"column":20},"end":{"line":122,"column":20}}]},"11":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":24},"end":{"line":124,"column":24}},{"start":{"line":124,"column":24},"end":{"line":124,"column":24}}]},"12":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":20},"end":{"line":131,"column":20}},{"start":{"line":131,"column":20},"end":{"line":131,"column":20}}]},"13":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":24},"end":{"line":131,"column":36}},{"start":{"line":131,"column":40},"end":{"line":131,"column":52}}]},"14":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":20},"end":{"line":141,"column":20}},{"start":{"line":141,"column":20},"end":{"line":141,"column":20}}]},"15":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":24},"end":{"line":141,"column":48}},{"start":{"line":141,"column":52},"end":{"line":141,"column":64}}]},"16":{"line":152,"type":"cond-expr","locations":[{"start":{"line":153,"column":14},"end":{"line":153,"column":41}},{"start":{"line":154,"column":14},"end":{"line":154,"column":26}}]},"17":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":21},"end":{"line":152,"column":44}},{"start":{"line":152,"column":48},"end":{"line":152,"column":55}}]}},"code":["/**"," * @module run-tasks-in-parallel"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const NpmRunAllError = require(\"./npm-run-all-error\")","const runTask = require(\"./run-task\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/**"," * Remove the given value from the array."," * @template T"," * @param {T[]} array - The array to remove."," * @param {T} x - The item to be removed."," * @returns {void}"," */","function remove(array, x) {","    const index = array.indexOf(x)","    if (index !== -1) {","        array.splice(index, 1)","    }","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Run npm-scripts of given names in parallel."," *"," * If a npm-script exited with a non-zero code, this aborts other all npm-scripts."," *"," * @param {string} tasks - A list of npm-script name to run in parallel."," * @param {object} options - An option object."," * @returns {Promise} A promise object which becomes fullfilled when all npm-scripts are completed."," * @private"," */","module.exports = function runTasks(tasks, options) {","    return new Promise((resolve, reject) => {","        if (tasks.length === 0) {","            resolve([])","            return","        }","","        const results = tasks.map(task => ({name: task, code: undefined}))","        const queue = tasks.map((task, index) => ({name: task, index}))","        const promises = []","        let error = null","        let aborted = false","","        /**","         * Done.","         * @returns {void}","         */","        function done() {","            if (error == null) {","                resolve(results)","            }","            else {","                reject(error)","            }","        }","","        /**","         * Aborts all tasks.","         * @returns {void}","         */","        function abort() {","            if (aborted) {","                return","            }","            aborted = true","","            if (promises.length === 0) {","                done()","            }","            else {","                promises.forEach(p => p.abort())","                Promise.all(promises).then(done, reject)","            }","        }","","        /**","         * Runs a next task.","         * @returns {void}","         */","        function next() {","            if (aborted) {","                return","            }","            if (queue.length === 0) {","                if (promises.length === 0) {","                    done()","                }","                return","            }","            const task = queue.shift()","            const promise = runTask(task.name, options)","","            promises.push(promise)","            promise.then(","                (result) => {","                    remove(promises, promise)","                    if (aborted) {","                        return","                    }","","                    // Save the result.","                    results[task.index].code = result.code","","                    // Aborts all tasks if it's an error.","                    if (result.code) {","                        error = new NpmRunAllError(result, results)","                        if (!options.continueOnError) {","                            abort()","                            return","                        }","                    }","","                    // Aborts all tasks if options.race is true.","                    if (options.race && !result.code) {","                        abort()","                        return","                    }","","                    // Call the next task.","                    next()","                },","                (thisError) => {","                    remove(promises, promise)","                    if (!options.continueOnError || options.race) {","                        error = thisError","                        abort()","                        return","                    }","                    next()","                }","            )","        }","","        const max = options.maxParallel","        const end = (typeof max === \"number\" && max > 0)","            ? Math.min(tasks.length, max)","            : tasks.length","        for (let i = 0; i < end; ++i) {","            next()","        }","    })","}",""],"l":{"13":1,"14":1,"27":1,"28":0,"29":0,"30":0,"48":1,"49":0,"50":0,"51":0,"52":0,"55":0,"56":0,"57":0,"58":0,"59":0,"65":1,"66":0,"67":0,"70":0,"78":1,"79":0,"80":0,"82":0,"84":0,"85":0,"88":0,"89":0,"97":1,"98":0,"99":0,"101":0,"102":0,"103":0,"105":0,"107":0,"108":0,"110":0,"111":0,"113":0,"114":0,"115":0,"119":0,"122":0,"123":0,"124":0,"125":0,"126":0,"131":0,"132":0,"133":0,"137":0,"140":0,"141":0,"142":0,"143":0,"144":0,"146":0,"151":0,"152":0,"155":0,"156":0}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/npm-run-all-error.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/npm-run-all-error.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":25,"loc":{"start":{"line":25,"column":15},"end":{"line":25,"column":41}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":47,"column":1}},"2":{"start":{"line":26,"column":8},"end":{"line":26,"column":71}},"3":{"start":{"line":32,"column":8},"end":{"line":32,"column":36}},"4":{"start":{"line":39,"column":8},"end":{"line":39,"column":36}},"5":{"start":{"line":45,"column":8},"end":{"line":45,"column":33}}},"branchMap":{},"code":["/**"," * @module npm-run-all-error"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Error object with some additional info."," */","module.exports = class NpmRunAllError extends Error {","    /**","     * Constructor.","     *","     * @param {{name: string, code: number}} causeResult -","     *      The result item of the npm-script which causes an error.","     * @param {Array.<{name: string, code: (number|undefined)}>} allResults -","     *      All result items of npm-scripts.","     */","    constructor(causeResult, allResults) {","        super(`\"${causeResult.task}\" exited with ${causeResult.code}.`)","","        /**","         * The name of a npm-script which exited with a non-zero code.","         * @type {string}","         */","        this.name = causeResult.name","","        /**","         * The code of a npm-script which exited with a non-zero code.","         * This can be `undefined`.","         * @type {number}","         */","        this.code = causeResult.code","","        /**","         * All result items of npm-scripts.","         * @type {Array.<{name: string, code: (number|undefined)}>}","         */","        this.results = allResults","    }","}",""],"l":{"16":1,"26":0,"32":0,"39":0,"45":0}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/run-task.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/run-task.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"selectColor","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":31}}},"2":{"name":"wrapLabeling","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":52}}},"3":{"name":"detectStreamKind","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":39}}},"4":{"name":"runTask","line":118,"loc":{"start":{"line":118,"column":17},"end":{"line":118,"column":49}}},"5":{"name":"abort","line":184,"loc":{"start":{"line":184,"column":20},"end":{"line":184,"column":37}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":46}},"4":{"start":{"line":16,"column":0},"end":{"line":16,"column":49}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":73}},"7":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":80}},"9":{"start":{"line":33,"column":0},"end":{"line":42,"column":1}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":16}},"11":{"start":{"line":36,"column":4},"end":{"line":39,"column":5}},"12":{"start":{"line":37,"column":8},"end":{"line":37,"column":60}},"13":{"start":{"line":38,"column":8},"end":{"line":38,"column":17}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":49}},"15":{"start":{"line":52,"column":0},"end":{"line":65,"column":1}},"16":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"17":{"start":{"line":54,"column":8},"end":{"line":54,"column":21}},"18":{"start":{"line":57,"column":4},"end":{"line":57,"column":52}},"19":{"start":{"line":58,"column":4},"end":{"line":58,"column":65}},"20":{"start":{"line":58,"column":64},"end":{"line":58,"column":65}},"21":{"start":{"line":59,"column":4},"end":{"line":59,"column":39}},"22":{"start":{"line":60,"column":4},"end":{"line":60,"column":60}},"23":{"start":{"line":62,"column":4},"end":{"line":62,"column":23}},"24":{"start":{"line":64,"column":4},"end":{"line":64,"column":17}},"25":{"start":{"line":74,"column":0},"end":{"line":81,"column":1}},"26":{"start":{"line":75,"column":4},"end":{"line":80,"column":5}},"27":{"start":{"line":118,"column":0},"end":{"line":192,"column":1}},"28":{"start":{"line":119,"column":4},"end":{"line":119,"column":17}},"29":{"start":{"line":120,"column":4},"end":{"line":182,"column":6}},"30":{"start":{"line":121,"column":8},"end":{"line":121,"column":35}},"31":{"start":{"line":122,"column":8},"end":{"line":122,"column":77}},"32":{"start":{"line":123,"column":8},"end":{"line":123,"column":77}},"33":{"start":{"line":124,"column":8},"end":{"line":124,"column":64}},"34":{"start":{"line":125,"column":8},"end":{"line":125,"column":67}},"35":{"start":{"line":126,"column":8},"end":{"line":126,"column":67}},"36":{"start":{"line":127,"column":8},"end":{"line":127,"column":73}},"37":{"start":{"line":130,"column":8},"end":{"line":136,"column":9}},"38":{"start":{"line":131,"column":12},"end":{"line":135,"column":14}},"39":{"start":{"line":138,"column":8},"end":{"line":160,"column":9}},"40":{"start":{"line":139,"column":12},"end":{"line":139,"column":71}},"41":{"start":{"line":140,"column":12},"end":{"line":140,"column":63}},"42":{"start":{"line":141,"column":12},"end":{"line":145,"column":13}},"43":{"start":{"line":148,"column":12},"end":{"line":148,"column":57}},"44":{"start":{"line":151,"column":12},"end":{"line":151,"column":44}},"45":{"start":{"line":152,"column":12},"end":{"line":156,"column":13}},"46":{"start":{"line":159,"column":12},"end":{"line":159,"column":57}},"47":{"start":{"line":163,"column":8},"end":{"line":165,"column":9}},"48":{"start":{"line":164,"column":12},"end":{"line":164,"column":32}},"49":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"50":{"start":{"line":167,"column":12},"end":{"line":167,"column":48}},"51":{"start":{"line":169,"column":8},"end":{"line":171,"column":9}},"52":{"start":{"line":170,"column":12},"end":{"line":170,"column":48}},"53":{"start":{"line":174,"column":8},"end":{"line":177,"column":10}},"54":{"start":{"line":175,"column":12},"end":{"line":175,"column":21}},"55":{"start":{"line":176,"column":12},"end":{"line":176,"column":23}},"56":{"start":{"line":178,"column":8},"end":{"line":181,"column":10}},"57":{"start":{"line":179,"column":12},"end":{"line":179,"column":21}},"58":{"start":{"line":180,"column":12},"end":{"line":180,"column":33}},"59":{"start":{"line":184,"column":4},"end":{"line":189,"column":5}},"60":{"start":{"line":185,"column":8},"end":{"line":188,"column":9}},"61":{"start":{"line":186,"column":12},"end":{"line":186,"column":21}},"62":{"start":{"line":187,"column":12},"end":{"line":187,"column":21}},"63":{"start":{"line":191,"column":4},"end":{"line":191,"column":18}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"2":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":22}},{"start":{"line":53,"column":26},"end":{"line":53,"column":45}}]},"3":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":33},"end":{"line":58,"column":54}},{"start":{"line":58,"column":57},"end":{"line":58,"column":65}}]},"4":{"line":76,"type":"cond-expr","locations":[{"start":{"line":76,"column":25},"end":{"line":76,"column":33}},{"start":{"line":78,"column":8},"end":{"line":79,"column":25}}]},"5":{"line":78,"type":"cond-expr","locations":[{"start":{"line":78,"column":39},"end":{"line":78,"column":45}},{"start":{"line":79,"column":19},"end":{"line":79,"column":25}}]},"6":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":22}},{"start":{"line":78,"column":26},"end":{"line":78,"column":36}}]},"7":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":8}},{"start":{"line":130,"column":8},"end":{"line":130,"column":8}}]},"8":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":12},"end":{"line":130,"column":29}},{"start":{"line":130,"column":33},"end":{"line":130,"column":47}}]},"9":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":138,"column":8}},{"start":{"line":138,"column":8},"end":{"line":138,"column":8}}]},"10":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":25},"end":{"line":138,"column":40}},{"start":{"line":138,"column":44},"end":{"line":138,"column":50}}]},"11":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":28},"end":{"line":139,"column":43}},{"start":{"line":139,"column":47},"end":{"line":139,"column":71}}]},"12":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":39},"end":{"line":140,"column":55}},{"start":{"line":140,"column":58},"end":{"line":140,"column":63}}]},"13":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":26},"end":{"line":142,"column":42}},{"start":{"line":142,"column":45},"end":{"line":142,"column":52}}]},"14":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":8},"end":{"line":163,"column":8}},{"start":{"line":163,"column":8},"end":{"line":163,"column":8}}]},"15":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":166,"column":8}},{"start":{"line":166,"column":8},"end":{"line":166,"column":8}}]},"16":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":8},"end":{"line":169,"column":8}},{"start":{"line":169,"column":8},"end":{"line":169,"column":8}}]},"17":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":8},"end":{"line":185,"column":8}},{"start":{"line":185,"column":8},"end":{"line":185,"column":8}}]}},"code":["/**"," * @module run-task"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const path = require(\"path\")","const chalk = require(\"chalk\")","const parseArgs = require(\"shell-quote\").parse","const padEnd = require(\"string.prototype.padend\")","const createHeader = require(\"./create-header\")","const createPrefixTransform = require(\"./create-prefix-transform-stream\")","const spawn = require(\"./spawn\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const colors = [chalk.cyan, chalk.green, chalk.magenta, chalk.yellow, chalk.red]","","/**"," * Select a color from given task name."," *"," * @param {string} taskName - The task name."," * @returns {function} A colorize function that provided by `chalk`"," */","function selectColor(taskName) {","    let hash = 0","","    for (const i in taskName) {","        hash = ((hash << 5) - hash) + taskName.charCodeAt(i)","        hash |= 0","    }","","    return colors[Math.abs(hash) % colors.length]","}","","/**"," * Wraps stdout/stderr with a transform stream to add the task name as prefix."," *"," * @param {string} taskName - The task name."," * @param {stream.Writable} source - An output stream to be wrapped."," * @param {object} labelState - An label state for the transform stream."," * @returns {stream.Writable} `source` or the created wrapped stream."," */","function wrapLabeling(taskName, source, labelState) {","    if (source == null || !labelState.enabled) {","        return source","    }","","    const label = padEnd(taskName, labelState.width)","    const color = source.isTTY ? selectColor(taskName) : (x) => x","    const prefix = color(`[${label}] `)","    const stream = createPrefixTransform(prefix, labelState)","","    stream.pipe(source)","","    return stream","}","","/**"," * Converts a given stream to an option for `child_process.spawn`."," *"," * @param {stream.Readable|stream.Writable|null} stream - An original stream to convert."," * @param {process.stdin|process.stdout|process.stderr} std - A standard stream for this option."," * @returns {string|stream.Readable|stream.Writable} An option for `child_process.spawn`."," */","function detectStreamKind(stream, std) {","    return (","        stream == null ? \"ignore\" :","        // `|| !std.isTTY` is needed for the workaround of https://github.com/nodejs/node/issues/5620","        stream !== std || !std.isTTY ? \"pipe\" :","        /* else */ stream","    )","}","","//------------------------------------------------------------------------------","// Interface","//------------------------------------------------------------------------------","","/**"," * Run a npm-script of a given name."," * The return value is a promise which has an extra method: `abort()`."," * The `abort()` kills the child process to run the npm-script."," *"," * @param {string} task - A npm-script name to run."," * @param {object} options - An option object."," * @param {stream.Readable|null} options.stdin -"," *   A readable stream to send messages to stdin of child process."," *   If this is `null`, ignores it."," *   If this is `process.stdin`, inherits it."," *   Otherwise, makes a pipe."," * @param {stream.Writable|null} options.stdout -"," *   A writable stream to receive messages from stdout of child process."," *   If this is `null`, cannot send."," *   If this is `process.stdout`, inherits it."," *   Otherwise, makes a pipe."," * @param {stream.Writable|null} options.stderr -"," *   A writable stream to receive messages from stderr of child process."," *   If this is `null`, cannot send."," *   If this is `process.stderr`, inherits it."," *   Otherwise, makes a pipe."," * @param {string[]} options.prefixOptions -"," *   An array of options which are inserted before the task name."," * @param {object} options.labelState - A state object for printing labels."," * @param {boolean} options.printName - The flag to print task names before running each task."," * @returns {Promise}"," *   A promise object which becomes fullfilled when the npm-script is completed."," *   This promise object has an extra method: `abort()`."," * @private"," */","module.exports = function runTask(task, options) {","    let cp = null","    const promise = new Promise((resolve, reject) => {","        const stdin = options.stdin","        const stdout = wrapLabeling(task, options.stdout, options.labelState)","        const stderr = wrapLabeling(task, options.stderr, options.labelState)","        const stdinKind = detectStreamKind(stdin, process.stdin)","        const stdoutKind = detectStreamKind(stdout, process.stdout)","        const stderrKind = detectStreamKind(stderr, process.stderr)","        const spawnOptions = {stdio: [stdinKind, stdoutKind, stderrKind]}","","        // Print task name.","        if (options.printName && stdout != null) {","            stdout.write(createHeader(","                task,","                options.packageInfo,","                options.stdout.isTTY","            ))","        }","","        if (path.extname(options.npmPath || \"a.js\") === \".js\") {","            const npmPath = options.npmPath || process.env.npm_execpath  //eslint-disable-line no-process-env","            const execPath = npmPath ? process.execPath : \"npm\"","            const spawnArgs = [].concat(","                npmPath ? [npmPath, \"run\"] : [\"run\"],","                options.prefixOptions,","                parseArgs(task)","            )","","            // Execute.","            cp = spawn(execPath, spawnArgs, spawnOptions)","        }","        else {","            const execPath = options.npmPath","            const spawnArgs = [].concat(","                [\"run\"],","                options.prefixOptions,","                parseArgs(task)","            )","","            // Execute.","            cp = spawn(execPath, spawnArgs, spawnOptions)","        }","","        // Piping stdio.","        if (stdinKind === \"pipe\") {","            stdin.pipe(cp.stdin)","        }","        if (stdoutKind === \"pipe\") {","            cp.stdout.pipe(stdout, {end: false})","        }","        if (stderrKind === \"pipe\") {","            cp.stderr.pipe(stderr, {end: false})","        }","","        // Register","        cp.on(\"error\", (err) => {","            cp = null","            reject(err)","        })","        cp.on(\"close\", (code) => {","            cp = null","            resolve({task, code})","        })","    })","","    promise.abort = function abort() {","        if (cp != null) {","            cp.kill()","            cp = null","        }","    }","","    return promise","}",""],"l":{"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"25":1,"33":1,"34":0,"36":0,"37":0,"38":0,"41":0,"52":1,"53":0,"54":0,"57":0,"58":0,"59":0,"60":0,"62":0,"64":0,"74":1,"75":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"130":0,"131":0,"138":0,"139":0,"140":0,"141":0,"148":0,"151":0,"152":0,"159":0,"163":0,"164":0,"166":0,"167":0,"169":0,"170":0,"174":0,"175":0,"176":0,"178":0,"179":0,"180":0,"184":0,"185":0,"186":0,"187":0,"191":0}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/create-header.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/create-header.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"createHeader","line":29,"loc":{"start":{"line":29,"column":17},"end":{"line":29,"column":72}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":30}},"2":{"start":{"line":29,"column":0},"end":{"line":48,"column":1}},"3":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"4":{"start":{"line":31,"column":8},"end":{"line":31,"column":39}},"5":{"start":{"line":34,"column":4},"end":{"line":34,"column":42}},"6":{"start":{"line":35,"column":4},"end":{"line":35,"column":75}},"7":{"start":{"line":36,"column":4},"end":{"line":36,"column":67}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":45}},"9":{"start":{"line":38,"column":4},"end":{"line":38,"column":51}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":53}},"11":{"start":{"line":40,"column":4},"end":{"line":40,"column":40}},"12":{"start":{"line":41,"column":4},"end":{"line":41,"column":67}},"13":{"start":{"line":43,"column":4},"end":{"line":47,"column":1}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":34},"end":{"line":35,"column":45}},{"start":{"line":35,"column":48},"end":{"line":35,"column":75}}]},"3":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":34},"end":{"line":36,"column":36}},{"start":{"line":36,"column":39},"end":{"line":36,"column":67}}]},"4":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":26},"end":{"line":41,"column":43}},{"start":{"line":41,"column":46},"end":{"line":41,"column":67}}]}},"code":["/**"," * @module create-header"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const chalk = require(\"chalk\")","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Creates the header text for a given task."," *"," * @param {string} nameAndArgs - A task name and arguments."," * @param {object} packageInfo - A package.json's information."," * @param {object} packageInfo.body - A package.json's JSON object."," * @param {string} packageInfo.path - A package.json's file path."," * @param {boolean} isTTY - The flag to color the header."," * @returns {string} The header of a given task."," */","module.exports = function createHeader(nameAndArgs, packageInfo, isTTY) {","    if (!packageInfo) {","        return `\\n> ${nameAndArgs}\\n\\n`","    }","","    const index = nameAndArgs.indexOf(\" \")","    const name = (index === -1) ? nameAndArgs : nameAndArgs.slice(0, index)","    const args = (index === -1) ? \"\" : nameAndArgs.slice(index + 1)","    const packageName = packageInfo.body.name","    const packageVersion = packageInfo.body.version","    const scriptBody = packageInfo.body.scripts[name]","    const packagePath = packageInfo.path","    const color = isTTY ? chalk.styles.gray : {open: \"\", close: \"\"}","","    return `","${color.open}> ${packageName}@${packageVersion} ${name} ${packagePath}${color.close}","${color.open}> ${scriptBody} ${args}${color.close}","","`","}",""],"l":{"13":1,"29":1,"30":0,"31":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/create-prefix-transform-stream.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/create-prefix-transform-stream.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":15},"end":{"line":37,"column":31}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":14},"end":{"line":52,"column":42}}},"3":{"name":"createPrefixTransform","line":87,"loc":{"start":{"line":87,"column":17},"end":{"line":87,"column":63}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":32}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":20}},"3":{"start":{"line":38,"column":8},"end":{"line":38,"column":15}},"4":{"start":{"line":40,"column":8},"end":{"line":40,"column":28}},"5":{"start":{"line":41,"column":8},"end":{"line":41,"column":26}},"6":{"start":{"line":53,"column":8},"end":{"line":53,"column":34}},"7":{"start":{"line":54,"column":8},"end":{"line":54,"column":37}},"8":{"start":{"line":55,"column":8},"end":{"line":55,"column":32}},"9":{"start":{"line":56,"column":8},"end":{"line":59,"column":30}},"10":{"start":{"line":60,"column":8},"end":{"line":60,"column":74}},"11":{"start":{"line":61,"column":8},"end":{"line":61,"column":92}},"12":{"start":{"line":63,"column":8},"end":{"line":63,"column":33}},"13":{"start":{"line":64,"column":8},"end":{"line":64,"column":46}},"14":{"start":{"line":66,"column":8},"end":{"line":66,"column":76}},"15":{"start":{"line":87,"column":0},"end":{"line":89,"column":1}},"16":{"start":{"line":88,"column":4},"end":{"line":88,"column":45}}},"branchMap":{"1":{"line":57,"type":"cond-expr","locations":[{"start":{"line":57,"column":36},"end":{"line":57,"column":42}},{"start":{"line":58,"column":12},"end":{"line":59,"column":30}}]},"2":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":44},"end":{"line":58,"column":48}},{"start":{"line":59,"column":28},"end":{"line":59,"column":30}}]},"3":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":40},"end":{"line":66,"column":64}},{"start":{"line":66,"column":67},"end":{"line":66,"column":75}}]}},"code":["/**"," * @module create-prefix-transform-stream"," * @author Toru Nagashima"," * @copyright 2016 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const stream = require(\"stream\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","const ALL_BR = /\\n/g","","/**"," * The transform stream to insert a specific prefix."," *"," * Several streams can exist for the same output stream."," * This stream will insert the prefix if the last output came from other instance."," * To do that, this stream is using a shared state object."," *"," * @private"," */","class PrefixTransform extends stream.Transform {","    /**","     * @param {string} prefix - A prefix text to be inserted.","     * @param {object} state - A state object.","     * @param {string} state.lastPrefix - The last prefix which is printed.","     * @param {boolean} state.lastIsLinebreak -The flag to check whether the last output is a line break or not.","     */","    constructor(prefix, state) {","        super()","","        this.prefix = prefix","        this.state = state","    }","","    /**","     * Transforms the output chunk.","     *","     * @param {string|Buffer} chunk - A chunk to be transformed.","     * @param {string} encoding - The encoding of the chunk.","     * @param {function} callback - A callback function that is called when done.","     * @returns {void}","     */","    _transform(chunk, encoding, callback) {","        const prefix = this.prefix","        const nPrefix = `\\n${prefix}`","        const state = this.state","        const firstPrefix =","            state.lastIsLinebreak ? prefix :","            (state.lastPrefix !== prefix) ? \"\\n\" :","            /* otherwise */ \"\"","        const prefixed = `${firstPrefix}${chunk}`.replace(ALL_BR, nPrefix)","        const index = prefixed.indexOf(prefix, Math.max(0, prefixed.length - prefix.length))","","        state.lastPrefix = prefix","        state.lastIsLinebreak = (index !== -1)","","        callback(null, (index !== -1) ? prefixed.slice(0, index) : prefixed)","    }","}","","//------------------------------------------------------------------------------","// Public API","//------------------------------------------------------------------------------","","/**"," * Create a transform stream to insert the specific prefix."," *"," * Several streams can exist for the same output stream."," * This stream will insert the prefix if the last output came from other instance."," * To do that, this stream is using a shared state object."," *"," * @param {string} prefix - A prefix text to be inserted."," * @param {object} state - A state object."," * @param {string} state.lastPrefix - The last prefix which is printed."," * @param {boolean} state.lastIsLinebreak -The flag to check whether the last output is a line break or not."," * @returns {stream.Transform} The created transform stream."," */","module.exports = function createPrefixTransform(prefix, state) {","    return new PrefixTransform(prefix, state)","}",""],"l":{"13":1,"19":1,"38":0,"40":0,"41":0,"53":0,"54":0,"55":0,"56":0,"60":0,"61":0,"63":0,"64":0,"66":0,"87":1,"88":0}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/spawn.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/spawn.js","s":{"1":1},"b":{"1":[0,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}}},"branchMap":{"1":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":35},"end":{"line":19,"column":50}},{"start":{"line":19,"column":53},"end":{"line":19,"column":68}}]}},"code":["/**"," * @module spawn"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Launches a new process with the given command."," * This is {@link ./spawn-posix.js:spawn} or {@link ./spawn-win32.js:spawn}"," * @private"," */","module.exports = require(","    process.platform === \"win32\" ? \"./spawn-win32\" : \"./spawn-posix\"",")",""],"l":{"18":1}},"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/spawn-posix.js":{"path":"/home/travis/build/npmtest/node-npmtest-npm-run-all/node_modules/npm-run-all/lib/spawn-posix.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0},"b":{"1":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"kill","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":16}}},"2":{"name":"spawn","line":59,"loc":{"start":{"line":59,"column":17},"end":{"line":59,"column":56}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":41}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"3":{"start":{"line":25,"column":0},"end":{"line":40,"column":1}},"4":{"start":{"line":26,"column":4},"end":{"line":39,"column":6}},"5":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"6":{"start":{"line":28,"column":12},"end":{"line":28,"column":18}},"7":{"start":{"line":31,"column":8},"end":{"line":38,"column":10}},"8":{"start":{"line":32,"column":12},"end":{"line":37,"column":13}},"9":{"start":{"line":33,"column":16},"end":{"line":33,"column":39}},"10":{"start":{"line":59,"column":0},"end":{"line":64,"column":1}},"11":{"start":{"line":60,"column":4},"end":{"line":60,"column":52}},"12":{"start":{"line":61,"column":4},"end":{"line":61,"column":21}},"13":{"start":{"line":63,"column":4},"end":{"line":63,"column":16}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]}},"code":["/**"," * @module spawn-posix"," * @author Toru Nagashima"," * @copyright 2015 Toru Nagashima. All rights reserved."," * See LICENSE file in root directory for full license."," */","\"use strict\"","","//------------------------------------------------------------------------------","// Requirements","//------------------------------------------------------------------------------","","const crossSpawn = require(\"cross-spawn\")","const getDescendentProcessInfo = require(\"ps-tree\")","","//------------------------------------------------------------------------------","// Helpers","//------------------------------------------------------------------------------","","/**"," * Kills the new process and its sub processes."," * @this ChildProcess"," * @returns {void}"," */","function kill() {","    getDescendentProcessInfo(this.pid, (err, descendent) => {","        if (err) {","            return","        }","","        descendent.forEach(child => {","            try {","                process.kill(child.PID)","            }","            catch (_err) {","                // ignore.","            }","        })","    })","}","","//------------------------------------------------------------------------------","// Public Interface","//------------------------------------------------------------------------------","","/**"," * Launches a new process with the given command."," * This is almost same as `child_process.spawn`."," *"," * This returns a `ChildProcess` instance."," * `kill` method of the instance kills the new process and its sub processes."," *"," * @param {string} command - The command to run."," * @param {string[]} args - List of string arguments."," * @param {object} options - Options."," * @returns {ChildProcess} A ChildProcess instance of new process."," * @private"," */","module.exports = function spawn(command, args, options) {","    const child = crossSpawn(command, args, options)","    child.kill = kill","","    return child","}",""],"l":{"13":1,"14":1,"25":1,"26":0,"27":0,"28":0,"31":0,"32":0,"33":0,"59":1,"60":0,"61":0,"63":0}}}